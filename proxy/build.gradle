plugins {
  id 'org.springframework.boot' version '2.4.0'
}

apply plugin: 'io.spring.dependency-management'

repositories {
  mavenCentral()
}

publishing {
  publications {
    nebula(MavenPublication) {
      artifacts {
        // ensure the Spring Boot jar gets published rather than the plain jar
        artifact bootJar
        artifact javadocJar // because of bootJar, we need to put this back (sourceJar is ok)
      }
    }
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'io.micrometer:micrometer-registry-prometheus'
  implementation project(':prometheus-rsocket-spring')

  implementation 'io.rsocket:rsocket-micrometer'
  implementation 'io.rsocket:rsocket-transport-netty'

  implementation 'org.xerial.snappy:snappy-java:latest.release'
  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'
}

if (hasProperty('dockerUser') && hasProperty('dockerPassword')) {
  bootBuildImage {
    imageName = "$dockerUser/prometheus-rsocket-proxy:${project.version}"
    environment = ["BP_JVM_VERSION" : "11.*"]
    docker {
      publishRegistry {
        username = dockerUser
        password = dockerPassword
        email = 'tludwig@pivotal.io'
      }
    }
  }
}
