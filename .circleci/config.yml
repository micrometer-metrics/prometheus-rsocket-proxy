version: 2.1
orbs:
  build-tools: circleci/build-tools@2.6.3
executors:
  jdk-docker-executor:
    working_directory: ~/prometheus-rsocket-proxy
    docker:
      - image: adoptopenjdk/openjdk8:alpine-slim

jobs:
  build:
    executor: jdk-docker-executor
    steps:
      - checkout
      # necessary for at least restore_cache/save_cache because we're not using CircleCI convenience image
      - build-tools/install-ci-tools

      - restore_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: downloadDependencies
          command: ./gradlew downloadDependencies --console=plain

      - save_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle

      - run:
          name: run tests
          command: ./gradlew check test

      - run:
          name: collect test reports
          when: always
          command: |
            mkdir -p test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} test-results/junit/ \;

      - store_test_results:
          path: test-results/

      - store_artifacts:
          path: test-results/

  deploy:
    executor: jdk-docker-executor
    steps:
      - checkout
      - restore_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}
      - deploy:
          name: Deployment
          command: sh ./gradle/deploy.sh

  maven-central-sync:
    executor: jdk-docker-executor
    steps:
      - checkout
      - run:
          name: Decrypt properties
          command: openssl aes-256-cbc -d -in gradle.properties.enc -out gradle.properties -k "$KEY" -md sha256
      - deploy:
          name: Maven Central sync
          command: ./gradlew mavenCentralSync -Prelease.useLastTag=true -x bintrayPublish -x bintrayUpload -x bintrayCreateVersion -x bintrayCreatePackage
          # Maven Central Sync might take more than 10 minutes per artifact
          no_output_timeout: 30m

workflows:
  version: 2
  build_prs_deploy_snapshots:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - /\d+\.\d+\.x/
  build_deploy_releases:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+(-rc\.\d+)?$/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+(-rc\.\d+)?$/
      - staging-approval:
          type: approval
          requires:
            - deploy
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+(-rc\.\d+)?$/
      - maven-central-sync:
          requires:
            - staging-approval
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+(-rc\.\d+)?$/
